[*]GET /api/users: Get all users.
[*]GET /api/users/:id: Get a specific user by ID.
[*]POST /api/users: Create a new user.
[]PATCH /api/users/:id: Update an existing user.
[* ]DELETE /api/users/:id: Delete a user.

 else if (req.url.startsWith('/api/users') && req.method === 'GET') { // Corrected URL check
    const queryObject = url.parse(req.url, true).query; // Parse query parameters
    const users = readUsersFile();

    if (queryObject.id) { // Check if 'id' exists in query parameters
      const user = users.find(user => user.id == queryObject.id); // Use `==` to compare numbers and strings
      if (user) {
        res.writeHead(200, { 'content-type': 'application/json' });
        res.end(JSON.stringify(user)); // Return the specific user
      } else {
        res.writeHead(404, { 'content-type': 'application/json' });
        res.end(JSON.stringify({ success: 'false', message: 'User not found.' })); // Handle user not found
      }
    } else {
      res.writeHead(200, { 'content-type': 'application/json' });
      res.end(JSON.stringify(users)); // Return all users if no 'id' provided
    }
